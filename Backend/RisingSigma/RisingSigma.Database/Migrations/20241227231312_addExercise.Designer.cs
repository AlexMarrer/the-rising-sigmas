// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RisingSigma.Database;

#nullable disable

namespace RisingSigma.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241227231312_addExercise")]
    partial class addExercise
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RisingSigma.Database.Entities.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<double>("RPE")
                        .HasColumnType("float");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<Guid>("WeekPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WeekPlanId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.TrainingPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CycleWeeks")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingPlan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.WeekPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainingPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("WeekPlan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.Exercise", b =>
                {
                    b.HasOne("RisingSigma.Database.Entities.WeekPlan", "WeekPlan")
                        .WithMany("Exercise")
                        .HasForeignKey("WeekPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeekPlan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.TrainingPlan", b =>
                {
                    b.HasOne("RisingSigma.Database.Entities.User", "User")
                        .WithMany("Plan")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.WeekPlan", b =>
                {
                    b.HasOne("RisingSigma.Database.Entities.TrainingPlan", "TrainingPlan")
                        .WithMany("WeekPlan")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.TrainingPlan", b =>
                {
                    b.Navigation("WeekPlan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.User", b =>
                {
                    b.Navigation("Plan");
                });

            modelBuilder.Entity("RisingSigma.Database.Entities.WeekPlan", b =>
                {
                    b.Navigation("Exercise");
                });
#pragma warning restore 612, 618
        }
    }
}
