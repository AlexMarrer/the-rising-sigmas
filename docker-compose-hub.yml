services:
  # SQL Server
  database:
    build:
      context: ./db
    image: ${DOCKER_HUB_USER}/rs-database:latest
    container_name: ${DB_CONTAINER_NAME:-rs-database}
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DB_PASSWORD}
      MSSQL_PID: "Express"
    ports:
      - "${DB_PORT:-1433}:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "SA", "-P", "${DB_PASSWORD}", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 60s
    networks:
      - rs-network
    volumes:
      - db-data:/var/opt/mssql
    restart: unless-stopped

  # Backend Docker Hub
  backend:
    image: ${DOCKER_HUB_USER}/rs-backend:latest
    container_name: ${BACKEND_CONTAINER_NAME:-rs-backend}
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__Database=Server=database;Database=${DB_NAME:-RisingSigma};User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=True;
    ports:
      - "${API_PORT:-5000}:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rs-network
    restart: unless-stopped

  # Frontend Docker Hub
  frontend:
    image: ${DOCKER_HUB_USER}/rs-frontend:latest
    container_name: ${FRONTEND_CONTAINER_NAME:-rs-frontend}
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    environment:
      - API_URL=http://backend:80
    depends_on:
      - backend
    networks:
      - rs-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  adminer:
    image: adminer:latest
    container_name: ${ADMINER_CONTAINER_NAME:-rs-adminer}
    ports:
      - "${ADMINER_PORT:-8090}:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=database
      - ADMINER_DEFAULT_DB=${DB_NAME:-RisingSigma}
      - ADMINER_DESIGN=pepa-linha
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rs-network
    restart: unless-stopped

volumes:
  db-data:
    name: rs-database-volume

networks:
  rs-network:
    driver: bridge
