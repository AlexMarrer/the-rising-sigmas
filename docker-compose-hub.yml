version: "3.8"

services:
  # SQL Server
  database:
    build:
      context: ./db
    image: the-rising-sigmas-database
    container_name: rs-database
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DB_PASSWORD}
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "SA", "-P", "${DB_PASSWORD}", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 60s
    networks:
      - rs-network
    volumes:
      - db-data:/var/opt/mssql

  # Backend Docker Hub
  backend:
    image: ${DOCKER_HUB_USER}/rs-backend:latest
    container_name: rs-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Database=Server=database;Database=RisingSigma;User Id=sa;Password=${DB_PASSWORD};TrustServerCertificate=True;
    ports:
      - "5000:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rs-network

  # Frontend Docker Hub
  frontend:
    image: ${DOCKER_HUB_USER}/rs-frontend:latest
    container_name: rs-frontend
    ports:
      - "8080:80"
    environment:
      - API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - rs-network
  adminer:
    image: adminer:latest
    container_name: rs-adminer
    ports:
      - "8090:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=database
      - ADMINER_DESIGN=pepa-linha
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rs-network

volumes:
  db-data:
    name: rs-database-volume

networks:
  rs-network:
    driver: bridge
